#14
writeLines("\"\\")
#14
writeLines("\"\\")
#14
writeLines("\"\\")
#15
writeLines("\\abc")
writeLines("\\")
("\"\\""\\""")
#14
writeLines("\"\\")
#14
writeLines(\..\..\..)
"\"\\"
#14
writeLines("\"\\")
writeLines( "\"\"\"\\")
writelines("\""\)
writelines("\"\\""\\")
writelines("\"\\")
library(tidyverse)
library(ggplot2)
library(readr)
library(stringr)
library(tidyr)
library(forcats)
library(dplyr)
library(reshape2)
writelines("\\")
writeLines( "\"\"\"\\")
xx <- c("eight", "four", "ten", "two")
xx
y <- c("ten", "eight", "twelve", "two", "six", "four")
y
sort(y)
xx <- c("eight", "four", "ten", "two")
xx
sort(xx)
numbers <-c("one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten","eleven","twelve")
numbers
xyz <- factor(xx,  levels = numbers)
xyz
sort(xyz)
sort(xyz)
mpg%>%
select(manufacturer , cty)%>%
group_by(manufacturer == "ford") %>%
summarise(AverageCityMileage = mean(cty))
mpg%>%
select(manufacturer , cty)%>%
summarise(AverageCityMileage = mean(cty))
mpg%>%
select(manufacturer, cty)%>%
summarise(AverageCityMileage = mean(cty))
mpg
view(mpg)
mpg%>%
select(manufacturer , cty)%>%
group_by(manufacturer) %>%
summarise(AverageCityMileage = mean(cty))
mpg%>%
group_by(manufacturer)%>%
summarize(cty = mean(cty, na.rm = TRUE),
n=n()
) -> ctyman
ctyman
ggplot(data = ctyman) +
geom_point(mapping = aes(x=cty,
y = manufacturer))
summarise(AA, meansalary = mean(Salary))
mpg%>%
select(manufacturer , cty)%>%
group_by(manufacturer) %>%
summarise(AverageCityMileage = mean(cty))
read_csv("Copy of college_score.csv") -> collegescore
collegescore
view(collegescore)
ggplot(data=collegescore) +
geom_point(mapping = aes(x = COSTT4_A, y=MN_EARN_WNE_P6))
ggplot(data=collegescore, mapping=(aes(x=COSTT4_A,y=MN_EARN_WNE_P6))) +
geom_point() +
geom_smooth(method=lm,se= FALSE) +
facet_wrap(~ICLEVEL)
tips%>%
count(day)
ggplot(data = tips) +
geom_histogram(mapping = aes(x=total_bill))
ggplot(data = tips) +
geom_histogram(mapping = aes(x=total_bill))+
facet_grid(sex ~ smoker)
stringr::words
str_subset(words, "^....a....$")
mpg%>%
group_by(manufacturer)%>%
summarize(cty = mean(cty, na.rm = TRUE),
n=n()
) -> ctyman
ctyman
ggplot(data = ctyman) +
geom_point(mapping = aes(x=cty,
y = manufacturer))
mpg%>%
select(manufacturer , cty)%>%
group_by(manufacturer) %>%
summarise(AverageCityMileage = mean(cty))
xx <- c("eight", "four", "ten", "two")
xx
sort(xx)
numbers <-c("one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten","eleven","twelve")
numbers
xyz <- factor(xx,  levels = numbers)
xyz
sort(xyz)
writeLines("\\\"\"")
ggplot(data=collegescore) +
geom_point(mapping = aes(x = COSTT4_A, y=MN_EARN_WNE_P6))
ggplot(data=collegescore, mapping=(aes(x=COSTT4_A,y=MN_EARN_WNE_P6))) +
geom_point() +
geom_smooth(method=lm,se= FALSE) +
facet_wrap(~ICLEVEL)
ggplot(data=collegescore, mapping=(aes(x=COSTT4_A,y=MN_EARN_WNE_P6))) +
facet_wrap(~ICLEVEL)
ggplot(data=collegescore, mapping=(aes(x=COSTT4_A,y=MN_EARN_WNE_P6))) +
geom_point() +
facet_wrap(~ICLEVEL)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
ggplot(data = collegescore) +
geom_bar(mapping = aes(x=AGE_ENTRY))
parse_factor(c("Christianity", "Communism", "Chemistry", "Hinduism"), levels = Religions)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY< 1, AGE_ENTRY> 100)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY> 1, AGE_ENTRY< 100)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
read_csv("Copy of college_score.csv") -> collegescore
collegescore
view(collegescore)
ggplot(data=collegescore, mapping=(aes(x=COSTT4_A,y=MN_EARN_WNE_P6))) +
geom_point() +
facet_wrap(~ICLEVEL)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY> 1, AGE_ENTRY< 100)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
#4
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY> 1, AGE_ENTRY< 100)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY> 1)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 40)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 80)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
#4
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 100)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 90)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore
collegescore123 <-filter(collegescore, AGE_ENTRY > 1, AGE_ENTRY < 90)
collegescore123
ggplot(data = collegescore123) +
geom_bar(mapping = aes(x=AGE_ENTRY))
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 90)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
#4
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 90)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
#4
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 90)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 90)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
collegescore%>%
select(INSTNM, AGE_ENTRY)%>%
filter(AGE_ENTRY > 1, AGE_ENTRY < 90)%>%
arrange(desc(AGE_ENTRY))%>%
print(n=10)
library(tidyverse)
library(ggplot2)
library(readr)
library(stringr)
library(tidyr)
library(forcats)
library(dplyr)
library(reshape2)
ggplot(data = collegescore123) +
+   geom_histogram(mapping = aes(x=AGE_ENTRY))
ggplot(data = collegescore123) +
geom_histogram(mapping = aes(x=AGE_ENTRY))
collegescore123 <-filter(collegescore, AGE_ENTRY > 1, AGE_ENTRY < 90)
collegescore123
ggplot(data = collegescore123) +
geom_histogram(mapping = aes(x=AGE_ENTRY))
ggplot(data = collegescore123) +
geom_bar(mapping = aes(x=AGE_ENTRY))
collegescore%>%
filter(INSTNM== "American University")
parse_integer(c("20", "-10", "1.23")) -> x
x
mtcars[["mpg"]]
df <- tibble(
x = runif(5),
y = rnorm(5)
)
df
df$x
writeLines("\\.")
writeLines("\\\"\"")
writeLines( "\"\"\"\\")
writelines(“\””\ )
writelines(“\””\ )
writeLines( "\"\"\"\\")
writelines("\"\"\"\"\"")
writeLines( "\"\"\"\\")
writeLines("\"'\\\\")
writeLines("\.")
writeLines("\ Alaska")
writeLines("\.")
writeLines("\"")
writeLines("\\abc")
writeLines("\"")
writeLines("\\")
writeLines("\"""\\""\"""\"""\\")
writeLines("\"""\"")
#14
writeLines("\"\\")
writeLines("\"\\""\"")
writeLines("\"\\""\\\")
writeLines("\"\\""\"")
collegescore%>%
filter(SAT_AVG < 1000)%>%
arrange(SAT_AVG)%>%
print(n=10)
collegescore%>%
filter(SAT_AVG > 1000)%>%
arrange(SAT_AVG)%>%
print(n=10)
collegescore%>%
filter(SAT_AVG > 1000)%>%
arrange(desc(SAT_AVG))%>%
print(n=10)
#5
americandf <- collegescore%>%
filter(INSTNM== "American")
#14
writeLines( "\"\"\"\\")
#14
writeLines( "\"\"\"\\")
#14
writeLines( "\"")
writelines("\"\\")
writeLines("\"\\")
writeLines("\"\\""\\")
writeLines("\"\\")
writeLines("\"\\""\"\\")
writeLines("\"\\\"\\")
riteLines("\"\\\"\\""\\")
#14
writeLines("\"\\\"\\")
#14
writeLines("\"\\\"\\""\"")
#14
writeLines("\"\\\"\"\\")
collegescore%>%
select(INSTNM, SAT_AVG)%>%
filter(SAT_AVG>1000)
#6
collegescore%>%
select(INSTNM, SAT_AVG)%>%
filter(SAT_AVG>1000)%>%
print(nrow(collegescore))
collegescore%>%
select(INSTNM, SAT_AVG)%>%
filter(SAT_AVG>1000)
sum(zzz)
sum(INSTNM, zzz)
collegescore%>%
select(INSTNM, SAT_AVG)%>%
filter(SAT_AVG>1000)
colSums(INSTNM, na.rm= FALSE, dims=1)
setwd("~/Downloads")
getwd()
volume_cylinder <- function(r, h) {
pi*r^2*h
}
volume_cylinder(3, 10)
library(tidyverse)
library(dplyr)
U[U > 2]
U <- c(10, 3, NA, 5, 8, 1, NA)
U
U[is.na(U)]
#2
V <- c("Bears", "Lions", "Dolphins", "Eagles", "Bengals")
X[3]
V[3]
#3
V[c(1,3,5)]
U <- c(10, 3, NA, 5, 8, 1, NA)
U
U[is.na(U)]
#4
V[c(2:5)]
U[!(U > 5) & !is.na(U)]
V[!U[!(V == "Bears") ]
V[!U[!(V = "Bears") ]
V[!(V = "Bears")]
V[!(V == "Bears")]
U[]
V[!(V = Bears)]
V[!(V = "Bears")]
#6
K <- list( x = 3:7, "never", 43, y = list(10,20,30))
length(K)
#7
str(K[[y]])
#7
K$y
str(Y)
Y <- list("ball", 25, 12.25, FALSE, b = 1:5, c = list(-1, "west"))
Y
str(Y)
#8
Str(K)
#8
str(K)
tribble( ~x,    ~y,    ~w,    ~z,
210,   300,   220,   180,
102,   100,   119,   187,
176,   175,   188,   173,
87,    95,   91,     94,
202,   210,  234,    218,
110,   122,  131,    128,
) -> dt
dt
dt
#9a
map_dbl(dt, mean)
#9c
dt %>%
map(summary)
#9c
dt %>%
map(summary) %>%
map_dbl("r.squared")
dt %>%
map(summary) %>%
map_dbl("r.squared")
map_dbl(mtcars, sd)
map_dbl(dt, mean)
dt %>%
map(summary) %>%
map_dbl(~.$r.squared)
sqrt(dt)
dt %>%
map(summary) %>%
map_dbl(~.$r.squared)
dt %>%
map(summary) %>%
map_dbl('r.squared')
dt %>%
map(summary) %>%
map_dbl(.r.squared)
tribble( ~x,    ~y,    ~w,    ~z,
210,   300,   220,   180,
102,   100,   119,   187,
176,   175,   188,   173,
87,    95,   91,     94,
202,   210,  234,    218,
110,   122,  131,    128
) -> dt
dt
library(tidyverse)
library(dplyr)
volume_cylinder <- function(r, h) {
pi*r^2*h
}
volume_cylinder <- function(r, h) {
pi*r^2*h
}
volume_cylinder(4, 6)
volume_cylinder(3, 10)
volume_cylinder <- function(r, h) {
V = pi*r^2*h
print(paste("The volume of a cylinder with a radius of 4 and a height of 6 is",V))
}
volume_cylinder(4, 6)
check(-3)
check <- function(x) {
if (x > 0) {
result <- "Positive"
}
else if (x < 0) {
result <- "Negative"
}
else {
result <- "Zero"
}
return(result)
}
# DS 413/613
# Functions  Chapters 15 and 17
library(tidyverse)
library(tidyverse)
volume_cylinder <- function(r, h) {
pi*r^2*h
}
volume_cylinder(4, 6)
volume_cylinder(3, 10)
library(tidyverse)
library(dplyr)
USArrests
USArrests %>%
map_dbl(max)
library(tidyverse)
library(dplyr)
library(nycflights13)
#3
flights
#4
nrow(flights)
nrow(flights)
ncol(flights)
is_tibble(flights)
factor(mtcars$cyl)
factor(nycflights13$flights)
models <- mtcars %>%
split(.$cyl) %>%
map(~lm(mpg ~ wt, data = .))
models
mtcars
V <- list(12, 22, 27, 31.5, NA, 39, "east")
V
length(V)
V[is.na(V)]
V[3]
U[!(U > 5) & !is.na(U)]
typeof(V)
U[]
str(Y[1:3])
str(V[7])
typeof(flights)
map_dbl(flights, type)
flights %>%
map(summary)
map_dbl(flights)
Species %>%
map(summary)
iris %>%
map(summary)
lm(species ~ iris)
lm(Species ~ iris)
QQ <- lm(Sepal.Length ~ Sepal.Width, iris)
QQ
diamonds
output3 <- vector("double", ncol(diamonds))  # 1. output
for (i in seq_along(diamonds)) {            # 2. sequence
output3[[i]] <- mean(diamonds[[i]])      # 3. body
}
multi_return <- function() {
my_list <- list("color" = "red", "size" = 20, "shape" = "round")
return(my_list)
}
a <- multi_return()
a$color
setwd("~/Desktop/Spring 2021/STAT 413")
setwd("~/Desktop/Spring 2021/STAT 413")
